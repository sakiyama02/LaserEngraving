#pragma once
/* ------------------------------------------------------------------------- */
/* ArmControl.hpp															 */
/* アーム制御のクラス														 */
/* 																			 */
/* ------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------- */
/* 番号		更新履歴								日付		氏名		 */
/* ------------------------------------------------------------------------- */
/* 000000	新規作成								2022/01/27	崎山 勇人	 */
/* ------------------------------------------------------------------------- */

/* ------------------------------------------------------------------------- */
/* includeファイル															 */
/* ------------------------------------------------------------------------- */
#include "../include/FrontMotor.hpp"
#include "../include/BackMotor.hpp"
#include "../include/System.hpp"
#include <math.h>

/* ------------------------------------------------------------------------- */
/* define宣言																 */
/* ------------------------------------------------------------------------- */
#define PI 				( 3.141592653589793 )	/* 円周率					 */
#define FRONT 0
#define BACK 1
#define LEFT_ROTATE 0
#define RIGHT_ROTATE 1
/* ------------------------------------------------------------------------- */
/* typedef宣言																 */
/* ------------------------------------------------------------------------- */
/* 計算時に使うシータ情報 -------------------------------------------------- */
typedef struct THETA
{
	double th1;									/* シータ1 					 */
	double th2;									/* シータ2 					 */
} THETA;

/* 現在の角度保持情報 ------------------------------------------------------ */
typedef struct DEGREE
{
	double deg1;								/* 角度1 					 */
	double deg2;								/* 角度2 					 */
} DEGREE;

/* アームの長さ情報 -------------------------------------------------------- */
typedef struct LENGTH
{
	double l1;									/* アーム1 					 */
	double l2;									/* アーム2 					 */
} LENGTH;

/* 座標情報 ---------------------------------------------------------------- */
typedef struct POSITION
{
	double x;									/* x座標 					 */
	double y;									/* y座標 					 */
} POSITION;

/* ------------------------------------------------------------------------- */
/* class宣言																 */
/* ------------------------------------------------------------------------- */
/* アーム制御を行うクラス -------------------------------------------------- */
class ArmControl
{
public:
	/* 実行 ---------------------------------------------------------------- */
	int run(double x, double y);
	/* 停止 ---------------------------------------------------------------- */
	int stop();
	/* 初期化 -------------------------------------------------------------- */
	int init(int dir,char select);

	/* シングルトン -------------------------------------------------------- */
	static ArmControl &getInstance()
	{
		static ArmControl instance;
		return instance;
	}

protected:
private:
	/* コンストラクタ ------------------------------------------------------ */
	ArmControl();
	/* デストラクタ -------------------------------------------------------- */
	~ArmControl();
	/* 逆運動計算 ---------------------------------------------------------- */
	THETA calc(POSITION pos);

	DEGREE 		degree;							/* アームの角度 			 */
	POSITION 	arm_pos;						/* アーム座標				 */
	THETA 		theta;							/* シータ 					 */
	LENGTH 		length;							/* アームの長さ 			 */
};

/* ------------------------------------------------------------------------- */
/*				Copyright HAL College of Technology & Design				 */
/* ------------------------------------------------------------------------- */